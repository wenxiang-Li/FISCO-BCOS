name: FISCO-BCOS GitHub Actions
on:
  push:
    branches-ignore:
      - "**-1.3"
      - "**-1.5"
    tags-ignore:
      - v1.*
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "Changelog.md"
      - "README.md"
  release:
    types: [published, created, edited]
env:
  CCACHE_DIR: ${{ github.workspace }}/ccache

jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - name: check commit
        if: ${{ runner.os == 'Linux' && github.base_ref != 'master' && github.event_name == 'pull_request' }}
        run: bash tools/ci/check-commit.sh
      - uses: actions/cache@v2
        id: cache
        with:
          path: deps/src
          key: deps-v8-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            deps-v8-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            deps-v8-${{ runner.temp }}-${{ github.base_ref }}-
            deps-v8-${{ runner.temp }}-
      - uses: actions/cache@v2
        id: ccache
        with:
          path: ccache
          key: ccache-v3-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            ccache-v3-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            ccache-v3-${{ runner.temp }}-${{ github.base_ref }}-
            ccache-v3-${{ runner.temp }}-
      - name: install macOS dependencies
        if: runner.os == 'macOS'
        run: brew install openssl@1.1 ccache gmp cmake
      - name: install Ubuntu dependencies
        if: runner.os == 'Linux'
        run: sudo apt install -y git curl build-essential clang cmake libssl-dev zlib1g-dev ccache libgmp-dev flex bison patch
      - name: configure
        run: CC=/usr/bin/clang CXX=/usr/bin/clang++ cmake -DTESTS=ON .
      - name: compile
        run: make -j2
      - name: run uint tests
        run: CTEST_OUTPUT_ON_FAILURE=TRUE make test
  macOS_integration_test:
    name: build_integration_test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - uses: actions/cache@v2
        id: cache
        with:
          path: deps/src
          key: deps-v5-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            deps-v5-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            deps-v5-notest-${{ runner.temp }}-${{ github.base_ref }}-
            deps-v5-notest-${{ runner.temp }}-
            deps-v5-${{ runner.temp }}-
      - uses: actions/cache@v2
        id: ccache
        with:
          path: ccache
          key: ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-
            ccache-v2-notest-${{ runner.temp }}-
      - name: install macOS dependencies
        run: brew install openssl@1.1 ccache cmake
      - name: configure
        run: cmake .
      - name: compile
        run: make -j2
      - name: run integration testing
        run: cd tools && bash ci/ci_check.sh
      - name: tar fisco-bcos for macOS
        run: cp tools/build_chain.sh bin/ && cd bin && strip fisco-bcos && tar -zcf fisco-bcos.tar.gz fisco-bcos build_chain.sh
      - uses: actions/upload-artifact@v2
        with:
          name: fisco-bcos-macOS.tar.gz
          path: bin/fisco-bcos.tar.gz

  # ubuntu16_integration_test:
  #   name: ubuntu16_integration_test
  #   runs-on: ubuntu-16.04
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 5
  #     - uses: actions/cache@v2
  #       id: cache
  #       with:
  #         path: deps/src
  #         key: deps-v4-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
  #         restore-keys: |
  #           deps-v4-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
  #           deps-v4-notest-${{ runner.temp }}-${{ github.base_ref }}-
  #           deps-v4-notest-${{ runner.temp }}-
  #           deps-v4-${{ runner.temp }}-
  #     - uses: actions/cache@v2
  #       id: ccache
  #       with:
  #         path: ccache
  #         key: ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
  #         restore-keys: |
  #           ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
  #           ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-
  #           ccache-v2-notest-${{ runner.temp }}-
  #     - name: install ubuntu dependencies
  #       run: sudo apt install -y git curl build-essential clang cmake openssl libssl-dev zlib1g-dev ccache libgmp-dev flex bison
  #     - name: configure
  #       run: CC=/usr/bin/clang CXX=/usr/bin/clang++ cmake .
  #     - name: compile
  #       run: make -j2
  #     - name: run integration testing
  #       run: cd tools && bash ci/ci_check.sh

  ubuntu20_integration_test:
    name: ubuntu20_test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 5
      - uses: actions/cache@v2
        id: cache
        with:
          path: deps/src
          key: deps-v3-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            deps-v3-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            deps-v3-notest-${{ runner.temp }}-${{ github.base_ref }}-
            deps-v3-notest-${{ runner.temp }}-
            deps-v3-${{ runner.temp }}-
      - uses: actions/cache@v2
        id: ccache
        with:
          path: ccache
          key: ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
          restore-keys: |
            ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-${{ hashFiles('.github/workflows/workflow.yml') }}
            ccache-v2-notest-${{ runner.temp }}-${{ github.base_ref }}-
            ccache-v2-notest-${{ runner.temp }}-
      - name: install ubuntu dependencies
        run: sudo apt install -y git curl build-essential clang cmake openssl libssl-dev zlib1g-dev ccache libgmp-dev flex bison
      - name: configure
        run: /usr/bin/cmake . -DBUILD_STATIC=ON
      - name: compile
        run: make -j2
      - name: run integration testing
        run: cd tools && bash ci/ci_check.sh
      - name: tar fisco-bcos for Linux
        run: cp tools/build_chain.sh bin/ && cd bin && strip fisco-bcos && tar -zcf fisco-bcos.tar.gz fisco-bcos build_chain.sh
      - uses: actions/upload-artifact@v2
        with:
          name: fisco-bcos.tar.gz
          path: bin/fisco-bcos.tar.gz
